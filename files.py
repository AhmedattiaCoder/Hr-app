# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'files.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_window(object):
    def x3(self):
        window.destroy()
    def setupUi(self, window):
        window.setObjectName("window")
        window.resize(457, 210)
        window.setFixedHeight(210)
        window.setFixedWidth(457)
        self.centralwidget = QtWidgets.QWidget(window)
        self.centralwidget.setObjectName("centralwidget")
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(270, 50, 141, 31))
        self.comboBox.setStyleSheet(".QComboBox{\n"
"    background-color:rgb(46, 255, 0);\n"
"    border-radius:10px;\n"
"    font-size:20px;\n"
"}\n"
".QComboBox:hover{\n"
"    background-color:rgb(28, 154, 0);\n"
"    border-radius:10px;\n"
"    font-size:20px;\n"
"}")
        self.comboBox.setObjectName("comboBox")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icons/pdf.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.comboBox.addItem(icon, "")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("icons/excel.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.comboBox.addItem(icon1, "")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(70, 50, 121, 31))
        self.pushButton.setStyleSheet(".QPushButton{\n"
"    background-color:rgb(58, 252, 255);\n"
"    border-radius:10px;\n"
"    font-size:20px;\n"
"}\n"
".QPushButton:hover{\n"
"    background-color:rgb(36, 158, 158);\n"
"    border-radius:10px;\n"
"    font-size:20px;\n"
"}")
        self.pushButton.setObjectName("pushButton")
        self.dateEdit = QtWidgets.QDateEdit(self.centralwidget)
        self.dateEdit.setGeometry(QtCore.QRect(270, 110, 150, 31))
        self.dateEdit.setStyleSheet(".QDateEdit{\n"
"    background-color:rgb(58, 255, 28);\n"
"    border-radius:30px;\n"
"    font-size:20px;\n"
"}\n"
".QDateEdit:hover{\n"
"    background-color:rgb(41, 181, 19);\n"
"    border-radius:30px;\n"
"    font-size:20px;\n"
"}")
        self.dateEdit.setObjectName("dateEdit")
        window.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(window)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 457, 21))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        window.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(window)
        self.statusbar.setObjectName("statusbar")
        window.setStatusBar(self.statusbar)
        self.action = QtWidgets.QAction(window)
        self.action.setObjectName("action")
        self.action_3 = QtWidgets.QAction(window)
        self.action_3.setObjectName("action_3")
        self.action_3.triggered.connect(self.x3)
        self.menu.addAction(self.action)
        self.menu.addSeparator()
        self.menu.addAction(self.action_3)
        self.menubar.addAction(self.menu.menuAction())

        self.retranslateUi(window)
        QtCore.QMetaObject.connectSlotsByName(window)

    def retranslateUi(self, window):
        _translate = QtCore.QCoreApplication.translate
        window.setWindowTitle(_translate("window", "Hr app [files]"))
        self.comboBox.setItemText(0, _translate("window", "pdf"))
        self.comboBox.setItemText(1, _translate("window", "excel"))
        self.pushButton.setText(_translate("window", "عرض التقرير"))
        self.menu.setTitle(_translate("window", "ملف"))
        self.action.setText(_translate("window", "فتح ملف"))
        self.action_3.setText(_translate("window", "خروج"))


#if __name__ == "__main__":
import sys
app = QtWidgets.QApplication(sys.argv)
window = QtWidgets.QMainWindow()
ui = Ui_window()
ui.setupUi(window)
#window.show()
#sys.exit(app.exec_())
